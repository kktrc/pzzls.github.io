<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Pzzls</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-07-20T03:47:41.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>pzzls</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Java程序员面试笔试题(备份)</title>
    <link href="http://yoursite.com/2016/07/20/java-interview-questions/"/>
    <id>http://yoursite.com/2016/07/20/java-interview-questions/</id>
    <published>2016-07-20T03:15:32.000Z</published>
    <updated>2016-07-20T03:47:41.000Z</updated>
    
    <content type="html">&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Java基本概念&quot;&gt;&lt;a href=&quot;#Java基本概念&quot; class=&quot;headerlink&quot; title=&quot;Java基本概念&quot;&gt;&lt;/a&gt;Java基本概念&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;1.Java语言有哪些优点？&lt;/li&gt;
&lt;li&gt;2.Java与C/C++有什么异同？&lt;/li&gt;
&lt;li&gt;3.为什么需要public static void main(String[] args) 这个方法？&lt;/li&gt;
&lt;li&gt;4.如何实现在main()方法执行前输出”Hello World”&lt;/li&gt;
&lt;li&gt;5.Java程序初始化的顺序&lt;/li&gt;
&lt;li&gt;6.Java中的作用域有哪些&lt;/li&gt;
&lt;li&gt;7.一个Java文件中是否可以定义多个类&lt;/li&gt;
&lt;li&gt;8.什么是构造函数&lt;/li&gt;
&lt;li&gt;9.为什么Java中有些接口没有任何方法&lt;/li&gt;
&lt;li&gt;10.Java 中的clone方法有什么作用&lt;/li&gt;
&lt;li&gt;11.什么是反射机制&lt;/li&gt;
&lt;li&gt;12.package有什么作用&lt;/li&gt;
&lt;li&gt;13.如何实现类似于C语言中函数指针的功能&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;面向对象技术&quot;&gt;&lt;a href=&quot;#面向对象技术&quot; class=&quot;headerlink&quot; title=&quot;面向对象技术&quot;&gt;&lt;/a&gt;面向对象技术&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;1.面向对象与面向过程有什么区别&lt;/li&gt;
&lt;li&gt;2.面向对象有哪些特征&lt;/li&gt;
&lt;li&gt;3.面向对象的开发方式有什么优点&lt;/li&gt;
&lt;li&gt;4.什么是继承&lt;/li&gt;
&lt;li&gt;5.组合和继承有什么区别&lt;/li&gt;
&lt;li&gt;6.多态的实现机制&lt;/li&gt;
&lt;li&gt;7.重载和覆盖有什么区别&lt;/li&gt;
&lt;li&gt;8.抽象类(abstract class)与接口(interface)有什么异同&lt;/li&gt;
&lt;li&gt;9.内部类有哪些&lt;/li&gt;
&lt;li&gt;10.如何获取父类的类名&lt;/li&gt;
&lt;li&gt;11.this 和 super有什么区别&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;关键字&quot;&gt;&lt;a href=&quot;#关键字&quot; class=&quot;headerlink&quot; title=&quot;关键字&quot;&gt;&lt;/a&gt;关键字&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;1.变量命名有哪些规则&lt;/li&gt;
&lt;li&gt;2.break,continue,以及return有什么区别&lt;/li&gt;
&lt;li&gt;3.final ,finally,finalize有什么区别&lt;/li&gt;
&lt;li&gt;4.assert有什么作用&lt;/li&gt;
&lt;li&gt;5.static关键字有哪些作用&lt;/li&gt;
&lt;li&gt;6.使用switch时有哪些注意事项&lt;/li&gt;
&lt;li&gt;7.volatile有什么作用&lt;/li&gt;
&lt;li&gt;8.instanceof有什么作用&lt;/li&gt;
&lt;li&gt;9.strictfp有什么作用&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;基本类型与运算&quot;&gt;&lt;a href=&quot;#基本类型与运算&quot; class=&quot;headerlink&quot; title=&quot;基本类型与运算&quot;&gt;&lt;/a&gt;基本类型与运算&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;1.Java提供了哪些基本数据类型&lt;/li&gt;
&lt;li&gt;2.什么是不可变类&lt;/li&gt;
&lt;li&gt;3.值传递与引用传递有哪些区别&lt;/li&gt;
&lt;li&gt;4.不同数据类型的转换有哪些规则&lt;/li&gt;
&lt;li&gt;5.强制类型转换的注意事项有哪些&lt;/li&gt;
&lt;li&gt;6.运算符优先级是什么&lt;/li&gt;
&lt;li&gt;7.Math类中round，ceil和floor方法的功能各是什么&lt;/li&gt;
&lt;li&gt;8.++i与i++有什么区别&lt;/li&gt;
&lt;li&gt;9.如何实现无符号数的右移操作&lt;/li&gt;
&lt;li&gt;10.char型变量中是否可以存储一个中文汉字&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;字符串与数组&quot;&gt;&lt;a href=&quot;#字符串与数组&quot; class=&quot;headerlink&quot; title=&quot;字符串与数组&quot;&gt;&lt;/a&gt;字符串与数组&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;1.字符串创建与存储的机制是什么&lt;/li&gt;
&lt;li&gt;2.”==”,equals和hashCode有什么区别&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;Java基本概念&quot;&gt;&lt;a href=&quot;#Java基本概念&quot; class=&quot;headerlink&quot; title=&quot;Java基本概念&quot;&gt;&lt;/a&gt;Java基本概念&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;1.Java语言有哪些优点？&lt;/li&gt;
&lt;l
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>最好的时代，同时也是最坏的时代</title>
    <link href="http://yoursite.com/2016/07/19/well-period-bad-period/"/>
    <id>http://yoursite.com/2016/07/19/well-period-bad-period/</id>
    <published>2016-07-19T14:40:42.000Z</published>
    <updated>2016-07-19T16:08:39.000Z</updated>
    
    <content type="html">&lt;p&gt;这是最好的时代，也是最坏的时代。为什么我会这么说呢，&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;这是最好的时代，也是最坏的时代。为什么我会这么说呢，&lt;/p&gt;

    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>UICollectionViews Now Have Easy Reordering(译)</title>
    <link href="http://yoursite.com/2016/07/19/UICollectionViews-Now-Have-Easy-Reordering/"/>
    <id>http://yoursite.com/2016/07/19/UICollectionViews-Now-Have-Easy-Reordering/</id>
    <published>2016-07-19T03:07:04.000Z</published>
    <updated>2016-07-19T09:18:49.000Z</updated>
    
    <content type="html">&lt;p&gt;译自&lt;a href=&quot;http://nshint.io/blog/2015/07/16/uicollectionviews-now-have-easy-reordering/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UICollectionViews Now Have Easy Reordering&lt;/a&gt;&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;UICollectionView-现在可以很容易的重排&quot;&gt;&lt;a href=&quot;#UICollectionView-现在可以很容易的重排&quot; class=&quot;headerlink&quot; title=&quot;UICollectionView 现在可以很容易的重排&quot;&gt;&lt;/a&gt;UICollectionView 现在可以很容易的重排&lt;/h3&gt;&lt;p&gt;之前我把Reordering翻译成了排序，感觉不太适合，查了一下英文，应该叫重排，&lt;br&gt;&lt;img src=&quot;http://o6y686hwm.bkt.clouddn.com/recording.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;以下是译文&lt;/strong&gt;:&lt;/p&gt;
&lt;p&gt;我特别喜欢&lt;code&gt;UICollectionView&lt;/code&gt;。UICollectionView比它的兄长&lt;code&gt;UITableView&lt;/code&gt;更加容易定制。现在我使用collection view的频率要比table view要多。在iOS 9中它排序更加容易(增加了一些API)。在之前的时候如果要实现排序的话要做很多的工作。接下来让我们来看一下API。你可以在&lt;a href=&quot;https://github.com/nshintio/uicollectionview-reordering&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;找到伴随的Xcode工程。&lt;/p&gt;
&lt;p&gt;最简单的方式是使用&lt;code&gt;UICollectionViewController&lt;/code&gt;来添加排序操作。&lt;code&gt;UICollectionViewController&lt;/code&gt;现在有一个新的属性叫&lt;code&gt;installsStandardGestureForInteractiveMovement&lt;/code&gt;,这个属性增加了标准的手势来对单元格进行排序。这个属性默认是&lt;code&gt;true&lt;/code&gt;,这就意味着我们只要重写一个方法就可以对单元格进行重排了。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;override func collectionView(collectionView: UICollectionView,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	moveItemAtIndexPath sourceIndexPath: NSIndexPath,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	toIndexPath destinationIndexPath: NSIndexPath) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	// move your data order&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;视图中的collection view 推断单元格可以被移动，因为&lt;code&gt;moveItemAtIndexPath&lt;/code&gt;被重写了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o6y686hwm.bkt.clouddn.com/1.gif&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;如果我们要使用&lt;code&gt;UIViewController&lt;/code&gt;和&lt;code&gt;collection view&lt;/code&gt;来实现单元格重排的话会变得稍微复杂一点。我们需要实现&lt;code&gt;UICollectionViewDataSource&lt;/code&gt;里面的方法，重写&lt;code&gt;installsStandardGestureForInteractiveMovement&lt;/code&gt;。不要担心，也很容易实现。&lt;code&gt;UILongPressGestureRecognizer&lt;/code&gt;是一个持续性的手势，支持拖拉。&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;override func viewDidLoad() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   	super.viewDidLoad()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       longPressGesture = UILongPressGestureRecognizer(target: self, action: &amp;quot;handleLongGesture:&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       self.collectionView.addGestureRecognizer(longPressGesture)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   func handleLongGesture(gesture: UILongPressGestureRecognizer) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       switch(gesture.state) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       case UIGestureRecognizerState.Began:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           guard let selectedIndexPath = self.collectionView.indexPathForItemAtPoint(gesture.locationInView(self.collectionView)) else &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               break&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           collectionView.beginInteractiveMovementForItemAtIndexPath(selectedIndexPath)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       case UIGestureRecognizerState.Changed:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           collectionView.updateInteractiveMovementTargetPosition(gesture.locationInView(gesture.view!))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       case UIGestureRecognizerState.Ended:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           collectionView.endInteractiveMovement()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       default:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           collectionView.cancelInteractiveMovement()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;译自&lt;a href=&quot;http://nshint.io/blog/2015/07/16/uicollectionviews-now-have-easy-reordering/&quot;&gt;UICollectionViews Now Have Easy Reordering&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="uicollectionview" scheme="http://yoursite.com/tags/uicollectionview/"/>
    
  </entry>
  
  <entry>
    <title>ViewController 中的传值问题</title>
    <link href="http://yoursite.com/2016/07/18/ios-vc-pass-value/"/>
    <id>http://yoursite.com/2016/07/18/ios-vc-pass-value/</id>
    <published>2016-07-18T09:51:29.000Z</published>
    <updated>2016-07-19T02:33:59.000Z</updated>
    
    <content type="html"></content>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="ios" scheme="http://yoursite.com/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>解析仿礼物说这个App</title>
    <link href="http://yoursite.com/2016/07/18/analysy-fang-liwushuo-work/"/>
    <id>http://yoursite.com/2016/07/18/analysy-fang-liwushuo-work/</id>
    <published>2016-07-18T02:51:15.000Z</published>
    <updated>2016-07-18T03:39:21.000Z</updated>
    
    <content type="html">&lt;p&gt;Read the Fucking Source Code!Linus在回答有人提出的Minix的一个问题时，第一句话就是RTFSC，这就是这句话的由来。Source Code直接反映了一个代码的运行方式，阅读源码永远是最有效的学习方式。今天我只是想作为一个观众解析一下这个源代码，也学习一下怎么样阅读源码。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;code&gt;github仓库地址&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/HHuiHao/liwushuo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;github&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;首先让我们来看一下目录结构&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o6y686hwm.bkt.clouddn.com/liwushuo1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;很标准的iOS工程目录:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Liwushuo.xcodeproj:我叫他工程文件，是我们创建iOS工程时创建的目录，主要内容是关于项目的设置，依赖等等。&lt;/li&gt;
&lt;li&gt;Liwushuo.xcworkspace: 这个cocoapods为我们创建的工程目录，内容也差不多。&lt;/li&gt;
&lt;li&gt;Liwushuo: 这里是源码目录，我们的源码一般都放在这里。&lt;/li&gt;
&lt;li&gt;Pods:我们依赖的第三方工程的目录。&lt;/li&gt;
&lt;li&gt;.gitignore: git的忽略文件&lt;/li&gt;
&lt;li&gt;Podfile:cocoapods的依赖配置文件&lt;/li&gt;
&lt;li&gt;Podfile.lock:cocoapods的依赖锁定文件&lt;/li&gt;
&lt;li&gt;README.md:README&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;接下来我们看一下Podfile这个文件，看一下这个工程依赖了哪些第三方工程库:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o6y686hwm.bkt.clouddn.com/liwushuo2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/SnapKit/SnapKit&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SnapKit&lt;/a&gt; //A Swift Autolayout DSL for iOS &amp;amp; OS X&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/CoderMJLee/MJRefresh&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MJRefresh&lt;/a&gt; //An easy way to use pull-to-refresh.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/SVProgressHUD/SVProgressHUD&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SVProgressHUD&lt;/a&gt; //A clean and lightweight progress HUD for your iOS and tvOS app.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;然后我进入目录执行了pod install(ps: 他这里的pod的版本比较低，应该是0.39，而现在已经是1.0.1了所以我切换了ruby环境用了ruby 2.2.5下的pod 0.39来执行)。&lt;/p&gt;
&lt;p&gt;运行截图:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://o6y686hwm.bkt.clouddn.com/liwushuo3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;好久没用礼物说了，(不会买，也不知道买给谁…)&lt;/p&gt;
&lt;p&gt;//待续&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Read the Fucking Source Code!Linus在回答有人提出的Minix的一个问题时，第一句话就是RTFSC，这就是这句话的由来。Source Code直接反映了一个代码的运行方式，阅读源码永远是最有效的学习方式。今天我只是想作为一个观众解析一下这个源代码，也学习一下怎么样阅读源码。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ios" scheme="http://yoursite.com/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>小白谈MVC</title>
    <link href="http://yoursite.com/2016/07/18/just-talk-mvc-arc/"/>
    <id>http://yoursite.com/2016/07/18/just-talk-mvc-arc/</id>
    <published>2016-07-18T02:43:34.000Z</published>
    <updated>2016-07-18T08:21:55.000Z</updated>
    
    <content type="html">&lt;p&gt;MVC杂谈，作为一个ios小白，了解mvc&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;img src=&quot;http://o6y686hwm.bkt.clouddn.com/mvc.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/496668219long/p/4471022.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS中MVC设计模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://wiki.jikexueyuan.com/project/ios-design-patterns-in-swift/mvc.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;iOS中的设计模式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.infoq.com/cn/articles/rethinking-mvc-mvvm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;被误解的MVC和被神化的MVVM&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://ios.jobbole.com/86895/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MVC架构杂谈&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;MVC杂谈，作为一个ios小白，了解mvc&lt;/p&gt;
    
    </summary>
    
    
      <category term="mvc" scheme="http://yoursite.com/tags/mvc/"/>
    
  </entry>
  
  <entry>
    <title>看韩剧《我的鬼神大人》</title>
    <link href="http://yoursite.com/2016/07/18/oh-my-god-lady/"/>
    <id>http://yoursite.com/2016/07/18/oh-my-god-lady/</id>
    <published>2016-07-18T02:11:20.000Z</published>
    <updated>2016-07-18T02:39:38.000Z</updated>
    
    <content type="html">&lt;p&gt;其实我本身对韩剧是毫无兴趣的，因为韩剧很多时候剧情太玛丽苏，但前几天无聊，也算是放松一下，就找了一部韩剧看。剧名叫做《哦我的鬼神大人》（ps:不知道怎么翻译的，根据我对剧情的了解也还好，或许名字叫我的鬼友也不错），其实除了放松之外还是有点启发的，或许对其他人没有启发…&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;strong&gt;剧情&lt;/strong&gt;大概是一个处女鬼附身到了一个女生的身上，去诱惑一个餐厅的主厨，最后成功上位的故事。这应该是最明朗的主线了，至于女鬼找自己的身世，以及剧中的黑暗人物在我看来也只不过是两天暗线用来支撑起剧情的发展。蛮有意思的是，同一个人演绎两种不同的性格差异，一个是活泼开朗，乐于助人，一种是内向，害怕别人。但也就是两种不同的性格差异才撑起来剧情。对我最有启发的也就是在这一点，我们大家都知道一件事，当我们遇到挫折的时候别人都会说要开朗的看待它，这句话说来容易，但是话这种东西很容易遗忘，无法将其具象化。理解本身就是一件很难的事。剧中的人物就不止挫折这么简单了，那是一种从生来就具有的自卑感，从家庭环境，学校环境，社会环境所影响。这种情况下想改变实在是太难了。于是出现了一个女鬼，这个女鬼呢，是一个出生很平常的女生，很底层的人物，但是很乐观开朗，不管遇到什么事都不会慌乱，很自信。完全是和女主性格相左的两个不同人物。剧情就不说了，反正就是那一套。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;人生&lt;/strong&gt;其实我想说的是我们面对人生的方式，总是听见别人对我们说要乐观的对待人生。这句话听得多了也就从来没放在心上，消极的对待人生并没有什么好处，反而是你的自卑感越来越重。生活本就不易，消极是没有意义的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;其实我本身对韩剧是毫无兴趣的，因为韩剧很多时候剧情太玛丽苏，但前几天无聊，也算是放松一下，就找了一部韩剧看。剧名叫做《哦我的鬼神大人》（ps:不知道怎么翻译的，根据我对剧情的了解也还好，或许名字叫我的鬼友也不错），其实除了放松之外还是有点启发的，或许对其他人没有启发…&lt;/p&gt;
    
    </summary>
    
    
      <category term="talks" scheme="http://yoursite.com/tags/talks/"/>
    
  </entry>
  
  <entry>
    <title>linux 安装Swift</title>
    <link href="http://yoursite.com/2016/07/17/swift-in-linux/"/>
    <id>http://yoursite.com/2016/07/17/swift-in-linux/</id>
    <published>2016-07-17T09:26:10.000Z</published>
    <updated>2016-07-18T02:40:58.000Z</updated>
    
    <content type="html">&lt;p&gt;最近想搭建一个自己的博客网站，虽然已经用&lt;strong&gt;hexo&lt;/strong&gt;来搭建了静态博客，但是还是想试一下自己搭建一个动态的博客，也趁机学习一下基本的web开发框架，而且是用swift来开发，也测试一下现在的swift web框架。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;p&gt;&lt;code&gt;搭建环境&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;centos 7.2&lt;/li&gt;
&lt;li&gt;swift &lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;&quot;&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近想搭建一个自己的博客网站，虽然已经用&lt;strong&gt;hexo&lt;/strong&gt;来搭建了静态博客，但是还是想试一下自己搭建一个动态的博客，也趁机学习一下基本的web开发框架，而且是用swift来开发，也测试一下现在的swift web框架。&lt;/p&gt;
    
    </summary>
    
    
      <category term="swift" scheme="http://yoursite.com/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>读《Web全栈工程师的自我修养》</title>
    <link href="http://yoursite.com/2016/07/16/fullstack-note/"/>
    <id>http://yoursite.com/2016/07/16/fullstack-note/</id>
    <published>2016-07-16T14:19:09.000Z</published>
    <updated>2016-07-17T09:30:20.000Z</updated>
    
    <content type="html">&lt;p&gt;全栈工程师这个名词近些年来提到次数很多，以前我的座右铭就是做一个全栈工程师，但是其实那个时候连全栈是什么意思都不知道，总是觉得什么都好奇，python啊，ruby啊，go啊，觉得语言好多，不知该从何学起。当然也导致了一段时间的迷茫，&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;全栈工程师这个名词近些年来提到次数很多，以前我的座右铭就是做一个全栈工程师，但是其实那个时候连全栈是什么意思都不知道，总是觉得什么都好奇，python啊，ruby啊，go啊，觉得语言好多，不知该从何学起。当然也导致了一段时间的迷茫，&lt;/p&gt;
    
    </summary>
    
    
      <category term="note" scheme="http://yoursite.com/tags/note/"/>
    
  </entry>
  
  <entry>
    <title>整理一些博客列表</title>
    <link href="http://yoursite.com/2016/07/16/blog-arrange/"/>
    <id>http://yoursite.com/2016/07/16/blog-arrange/</id>
    <published>2016-07-16T03:41:55.000Z</published>
    <updated>2016-07-17T14:25:30.000Z</updated>
    
    <content type="html">&lt;p&gt;整理一些博客列表&lt;/p&gt;
&lt;p&gt;自己从毕业以后就一直从事App端开发，基本上没有接触过其他的，比如Web端，后端，h5端，整理的这些博客以备后用，虽然不想专太多，了解一下还是好的。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h2 id=&quot;swift&quot;&gt;&lt;a href=&quot;#swift&quot; class=&quot;headerlink&quot; title=&quot;swift&quot;&gt;&lt;/a&gt;swift&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://swift.gg/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;SwiftGG&lt;/a&gt; //翻译的质量蛮高的&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://swiftcn.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift中国&lt;/a&gt; //活跃度不怎么高&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.swiftyper.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swiftyper&lt;/a&gt; //质量很高&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.devzeng.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;曾静的技术博客&lt;/a&gt; //第一次还以为是我以前的同事&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.cnbluebox.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;刘坤的技术博客&lt;/a&gt; //阿里的&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;oc&quot;&gt;&lt;a href=&quot;#oc&quot; class=&quot;headerlink&quot; title=&quot;oc&quot;&gt;&lt;/a&gt;oc&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://skyline75489.github.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;skyline75489&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.sunnyxx.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sunnyxx&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;android&quot;&gt;&lt;a href=&quot;#android&quot; class=&quot;headerlink&quot; title=&quot;android&quot;&gt;&lt;/a&gt;android&lt;/h2&gt;&lt;h2 id=&quot;前端&quot;&gt;&lt;a href=&quot;#前端&quot; class=&quot;headerlink&quot; title=&quot;前端&quot;&gt;&lt;/a&gt;前端&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://imququ.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Jerry Qu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://pinggod.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;pinggod&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;后端&quot;&gt;&lt;a href=&quot;#后端&quot; class=&quot;headerlink&quot; title=&quot;后端&quot;&gt;&lt;/a&gt;后端&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://g.gravizo.com/g?
    a -&amp;gt; b: hello;
    b -&amp;gt; a: hi;&quot; alt=&quot;Alt text&quot;&gt;&lt;/p&gt;
&lt;p&gt;…待续&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;整理一些博客列表&lt;/p&gt;
&lt;p&gt;自己从毕业以后就一直从事App端开发，基本上没有接触过其他的，比如Web端，后端，h5端，整理的这些博客以备后用，虽然不想专太多，了解一下还是好的。&lt;/p&gt;
    
    </summary>
    
    
      <category term="blog" scheme="http://yoursite.com/tags/blog/"/>
    
  </entry>
  
  <entry>
    <title>Swifter 一款看Swift的小型App</title>
    <link href="http://yoursite.com/2016/07/15/Swifter-App/"/>
    <id>http://yoursite.com/2016/07/15/Swifter-App/</id>
    <published>2016-07-15T06:55:44.000Z</published>
    <updated>2016-07-16T16:32:45.000Z</updated>
    
    <content type="html">&lt;p&gt;Swifter App&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;为了温习swift的语法，也为了自己更加&lt;br&gt;大概就是类似于Swift Cafe的一个App&lt;br&gt;主要功能有：一个列表，一个WebView加载网站&lt;br&gt;1.获取网站列表，解析&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;1&lt;/li&gt;
&lt;li&gt;2&lt;/li&gt;
&lt;li&gt;3&lt;/li&gt;
&lt;li&gt;4&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;产品需求&quot;&gt;&lt;a href=&quot;#产品需求&quot; class=&quot;headerlink&quot; title=&quot;产品需求&quot;&gt;&lt;/a&gt;产品需求&lt;/h3&gt;&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;p&gt;&lt;code&gt;nihao&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://summerxx.com/2016/06/30/Swift-Test/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Swift-Test&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Swifter App&lt;br&gt;
    
    </summary>
    
    
      <category term="swift" scheme="http://yoursite.com/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>Swift 小记</title>
    <link href="http://yoursite.com/2016/07/15/swift-little-demo/"/>
    <id>http://yoursite.com/2016/07/15/swift-little-demo/</id>
    <published>2016-07-15T04:15:37.000Z</published>
    <updated>2016-07-16T16:24:07.000Z</updated>
    
    <content type="html">&lt;p&gt;Swift 小记&lt;br&gt;&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;Alamofire.request(.GET, &lt;span class=&quot;string&quot;&gt;&quot;https://httpbin.org/get&quot;&lt;/span&gt;, parameters: [&lt;span class=&quot;string&quot;&gt;&quot;foo&quot;&lt;/span&gt;: &lt;span class=&quot;string&quot;&gt;&quot;bar&quot;&lt;/span&gt;])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;           .responseJSON &amp;#123; response &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               print(response.request)  &lt;span class=&quot;comment&quot;&gt;// original URL request&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               print(response.response) &lt;span class=&quot;comment&quot;&gt;// URL response&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               print(response.data)     &lt;span class=&quot;comment&quot;&gt;// server data&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               print(response.result)   &lt;span class=&quot;comment&quot;&gt;// result of response serialization&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; let JSON = response.result.value &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                   print(&lt;span class=&quot;string&quot;&gt;&quot;JSON: \(JSON)&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Swift 小记&lt;br&gt;
    
    </summary>
    
    
      <category term="swift" scheme="http://yoursite.com/tags/swift/"/>
    
  </entry>
  
  <entry>
    <title>那些著名或非著名的iOS面试题（3）</title>
    <link href="http://yoursite.com/2016/07/15/interview-3/"/>
    <id>http://yoursite.com/2016/07/15/interview-3/</id>
    <published>2016-07-15T03:04:02.000Z</published>
    <updated>2016-07-16T13:10:20.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;取自&lt;a href=&quot;http://www.codeceo.com/article/ios-interview-3.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;那些著名或非著名的iOS面试题（下）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.Runtime&lt;/li&gt;
&lt;li&gt;2.GCD实现1，2并行和3串行和45串行，4，5是并行。即3依赖1，2的执行，45依赖3的执行&lt;/li&gt;
&lt;li&gt;3.深浅复制和属性为copy，strong值的变化问题&lt;/li&gt;
&lt;li&gt;4.NSTimer创建后，会在哪个线程运行&lt;/li&gt;
&lt;li&gt;5.KVO，NSNotification，delegate及block区别&lt;/li&gt;
&lt;li&gt;6.如何让计时器调用一个类方法&lt;/li&gt;
&lt;li&gt;7.调用一个类的静态方法需不需要release？&lt;/li&gt;
&lt;li&gt;8.static作用？&lt;/li&gt;
&lt;li&gt;9.NSObject的load和initialize方法&lt;/li&gt;
&lt;li&gt;10.能否向编译后得到的类中增加实例变量？能否向运行时创建的类中添加实例变量？为什么？&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;取自&lt;a href=&quot;http://www.codeceo.com/article/ios-interview-3.html&quot;&gt;那些著名或非著名的iOS面试题（下）&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.Runtime&lt;/li&gt;
&lt;li&gt;2.GCD实现1，2并行和3串行和45串行，4，5是并行。即3依赖1，2的执行，45依赖3的执行&lt;/li&gt;
&lt;li&gt;3.深浅复制和属性为copy，strong值的变化问题&lt;/li&gt;
&lt;li&gt;4.NSTimer创建后，会在哪个线程运行&lt;/li&gt;
&lt;li&gt;5.KVO，NSNotification，delegate及block区别&lt;/li&gt;
&lt;li&gt;6.如何让计时器调用一个类方法&lt;/li&gt;
&lt;li&gt;7.调用一个类的静态方法需不需要release？&lt;/li&gt;
&lt;li&gt;8.static作用？&lt;/li&gt;
&lt;li&gt;9.NSObject的load和initialize方法&lt;/li&gt;
&lt;li&gt;10.能否向编译后得到的类中增加实例变量？能否向运行时创建的类中添加实例变量？为什么？&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="ios interview" scheme="http://yoursite.com/tags/ios-interview/"/>
    
  </entry>
  
  <entry>
    <title>那些著名或非著名的iOS面试题（2）</title>
    <link href="http://yoursite.com/2016/07/15/interview-2/"/>
    <id>http://yoursite.com/2016/07/15/interview-2/</id>
    <published>2016-07-15T02:59:00.000Z</published>
    <updated>2016-07-16T13:10:16.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;取自&lt;a href=&quot;http://www.codeceo.com/article/ios-interview-2.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;那些著名或非著名的iOS面试题（2）&lt;/a&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.反转二叉树，不用递归&lt;/li&gt;
&lt;li&gt;2.写一个单例模式&lt;/li&gt;
&lt;li&gt;3.iOS应用生命周期&lt;/li&gt;
&lt;li&gt;4.一工人给老板打7天工要求一块金条 这金条只能切2次 工人每天要1/7金条 怎么分?&lt;/li&gt;
&lt;li&gt;5.iOS中socket使用&lt;/li&gt;
&lt;li&gt;6.网络请求中post和get的区别&lt;/li&gt;
&lt;li&gt;7.时间复杂度和空间复杂度&lt;/li&gt;
&lt;li&gt;8.支付宝SDK使用&lt;/li&gt;
&lt;li&gt;9.远程推送&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;取自&lt;a href=&quot;http://www.codeceo.com/article/ios-interview-2.html&quot;&gt;那些著名或非著名的iOS面试题（2）&lt;/a&gt; &lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1.反转二叉树，不用递归&lt;/li&gt;
&lt;li&gt;2.写一个单例模式&lt;/li&gt;
&lt;li&gt;3.iOS应用生命周期&lt;/li&gt;
&lt;li&gt;4.一工人给老板打7天工要求一块金条 这金条只能切2次 工人每天要1/7金条 怎么分?&lt;/li&gt;
&lt;li&gt;5.iOS中socket使用&lt;/li&gt;
&lt;li&gt;6.网络请求中post和get的区别&lt;/li&gt;
&lt;li&gt;7.时间复杂度和空间复杂度&lt;/li&gt;
&lt;li&gt;8.支付宝SDK使用&lt;/li&gt;
&lt;li&gt;9.远程推送&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="interview ios" scheme="http://yoursite.com/tags/interview-ios/"/>
    
  </entry>
  
  <entry>
    <title>那些著名或非著名的iOS面试题（1）</title>
    <link href="http://yoursite.com/2016/07/15/interview-1/"/>
    <id>http://yoursite.com/2016/07/15/interview-1/</id>
    <published>2016-07-15T02:36:49.000Z</published>
    <updated>2016-07-16T13:09:39.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;想不到这么快就要开始找工作了，生活不易啊，人艰不拆&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以前找工作看书啊，看东西都是很马虎，或者蜻蜓点水。然后面试的时候才发现一问三不知，原因就是没有对问题有深刻的理解，这是面试大忌啊，因此趁着这次机会，有时间可以好好的准备一下，也正好复习一下ios基础知识。&lt;/p&gt;
&lt;p&gt;下面的试题取自&lt;a href=&quot;http://www.codeceo.com/article/ios-interview-1.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;那些著名或非著名的iOS面试题（上）&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1如何追踪app崩溃率，如何解决线上闪退&lt;/li&gt;
&lt;li&gt;2.什么是事件响应链，点击屏幕时是如何互动的，事件的传递&lt;/li&gt;
&lt;li&gt;3.Run Loop是什么，使用的目的，何时使用和关注点&lt;/li&gt;
&lt;li&gt;4.ARC和MRC&lt;/li&gt;
&lt;li&gt;5.线程和进程&lt;/li&gt;
&lt;li&gt;6.平常常用的多线程处理方式及优缺点&lt;/li&gt;
&lt;li&gt;7.大量数据表的优化方案&lt;/li&gt;
&lt;li&gt;8.常用到的动画库&lt;/li&gt;
&lt;li&gt;9.Restful架构&lt;/li&gt;
&lt;li&gt;10.请分析下SDWebImage的原理&lt;/li&gt;
&lt;/ul&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;1如何追踪app崩溃率，如何解决线上闪退&quot;&gt;&lt;a href=&quot;#1如何追踪app崩溃率，如何解决线上闪退&quot; class=&quot;headerlink&quot; title=&quot;1如何追踪app崩溃率，如何解决线上闪退&quot;&gt;&lt;/a&gt;&lt;strong&gt;1如何追踪app崩溃率，如何解决线上闪退&lt;/strong&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;我的理解：&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;2-什么是事件响应链，点击屏幕时是如何互动的，事件的传递。&quot;&gt;&lt;a href=&quot;#2-什么是事件响应链，点击屏幕时是如何互动的，事件的传递。&quot; class=&quot;headerlink&quot; title=&quot;2.什么是事件响应链，点击屏幕时是如何互动的，事件的传递。&quot;&gt;&lt;/a&gt;&lt;strong&gt;2.什么是事件响应链，点击屏幕时是如何互动的，事件的传递。&lt;/strong&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;我的理解：&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;3-Run-Loop是什么，使用的目的，何时使用和关注点。&quot;&gt;&lt;a href=&quot;#3-Run-Loop是什么，使用的目的，何时使用和关注点。&quot; class=&quot;headerlink&quot; title=&quot;3.Run Loop是什么，使用的目的，何时使用和关注点。&quot;&gt;&lt;/a&gt;&lt;strong&gt;3.Run Loop是什么，使用的目的，何时使用和关注点。&lt;/strong&gt;&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;我的理解：&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;Run Loop是一让线程能随时处理事件但不退出的机制。RunLoop 实际上是一个对象，这个对象管理了其需要处理的事件和消息，并提供了一个入口函数来执行Event Loop 的逻辑。线程执行了这个函数后，就会一直处于这个函数内部 “接受消息-&amp;gt;等待-&amp;gt;处理” 的循环中，直到这个循环结束（比如传入 quit 的消息），函数返回。让线程在没有处理消息时休眠以避免资源占用、在有消息到来时立刻被唤醒。&lt;/p&gt;
&lt;p&gt;OSX/iOS 系统中，提供了两个这样的对象：NSRunLoop 和 CFRunLoopRef。CFRunLoopRef 是在 CoreFoundation 框架内的，它提供了纯 C 函数的 API，所有这些 API 都是线程安全的。NSRunLoop 是基于 CFRunLoopRef 的封装，提供了面向对象的 API，但是这些 API 不是线程安全的。&lt;/p&gt;
&lt;p&gt;线程和 RunLoop 之间是一一对应的，其关系是保存在一个全局的 Dictionary 里。线程刚创建时并没有 RunLoop，如果你不主动获取，那它一直都不会有。RunLoop 的创建是发生在第一次获取时，RunLoop 的销毁是发生在线程结束时。你只能在一个线程的内部获取其 RunLoop（主线程除外）。&lt;/p&gt;
&lt;h3 id=&quot;4-ARC和MRC&quot;&gt;&lt;a href=&quot;#4-ARC和MRC&quot; class=&quot;headerlink&quot; title=&quot;4. ARC和MRC&quot;&gt;&lt;/a&gt;&lt;strong&gt;4. ARC和MRC&lt;/strong&gt;&lt;/h3&gt;&lt;h3 id=&quot;5-线程和进程&quot;&gt;&lt;a href=&quot;#5-线程和进程&quot; class=&quot;headerlink&quot; title=&quot;5. 线程和进程&quot;&gt;&lt;/a&gt;&lt;strong&gt;5. 线程和进程&lt;/strong&gt;&lt;/h3&gt;&lt;h3 id=&quot;6-平常常用的多线程处理方式及优缺点&quot;&gt;&lt;a href=&quot;#6-平常常用的多线程处理方式及优缺点&quot; class=&quot;headerlink&quot; title=&quot;6. 平常常用的多线程处理方式及优缺点&quot;&gt;&lt;/a&gt;&lt;strong&gt;6. 平常常用的多线程处理方式及优缺点&lt;/strong&gt;&lt;/h3&gt;&lt;h3 id=&quot;7-大量数据表的优化方案&quot;&gt;&lt;a href=&quot;#7-大量数据表的优化方案&quot; class=&quot;headerlink&quot; title=&quot;7. 大量数据表的优化方案&quot;&gt;&lt;/a&gt;&lt;strong&gt;7. 大量数据表的优化方案&lt;/strong&gt;&lt;/h3&gt;&lt;h3 id=&quot;8-常用到的动画库&quot;&gt;&lt;a href=&quot;#8-常用到的动画库&quot; class=&quot;headerlink&quot; title=&quot;8. 常用到的动画库&quot;&gt;&lt;/a&gt;&lt;strong&gt;8. 常用到的动画库&lt;/strong&gt;&lt;/h3&gt;&lt;h3 id=&quot;9-Restful架构&quot;&gt;&lt;a href=&quot;#9-Restful架构&quot; class=&quot;headerlink&quot; title=&quot;9. Restful架构&quot;&gt;&lt;/a&gt;&lt;strong&gt;9. Restful架构&lt;/strong&gt;&lt;/h3&gt;&lt;h3 id=&quot;10-请分析下SDWebImage的原理&quot;&gt;&lt;a href=&quot;#10-请分析下SDWebImage的原理&quot; class=&quot;headerlink&quot; title=&quot;10. 请分析下SDWebImage的原理&quot;&gt;&lt;/a&gt;&lt;strong&gt;10. 请分析下SDWebImage的原理&lt;/strong&gt;&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;想不到这么快就要开始找工作了，生活不易啊，人艰不拆&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;以前找工作看书啊，看东西都是很马虎，或者蜻蜓点水。然后面试的时候才发现一问三不知，原因就是没有对问题有深刻的理解，这是面试大忌啊，因此趁着这次机会，有时间可以好好的准备一下，也正好复习一下ios基础知识。&lt;/p&gt;
&lt;p&gt;下面的试题取自&lt;a href=&quot;http://www.codeceo.com/article/ios-interview-1.html&quot;&gt;那些著名或非著名的iOS面试题（上）&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1如何追踪app崩溃率，如何解决线上闪退&lt;/li&gt;
&lt;li&gt;2.什么是事件响应链，点击屏幕时是如何互动的，事件的传递&lt;/li&gt;
&lt;li&gt;3.Run Loop是什么，使用的目的，何时使用和关注点&lt;/li&gt;
&lt;li&gt;4.ARC和MRC&lt;/li&gt;
&lt;li&gt;5.线程和进程&lt;/li&gt;
&lt;li&gt;6.平常常用的多线程处理方式及优缺点&lt;/li&gt;
&lt;li&gt;7.大量数据表的优化方案&lt;/li&gt;
&lt;li&gt;8.常用到的动画库&lt;/li&gt;
&lt;li&gt;9.Restful架构&lt;/li&gt;
&lt;li&gt;10.请分析下SDWebImage的原理&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
      <category term="review" scheme="http://yoursite.com/tags/review/"/>
    
  </entry>
  
  <entry>
    <title>UITableView 显示进度条</title>
    <link href="http://yoursite.com/2016/07/15/UITableView-ProgressView/"/>
    <id>http://yoursite.com/2016/07/15/UITableView-ProgressView/</id>
    <published>2016-07-14T16:08:15.000Z</published>
    <updated>2016-07-16T16:23:00.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;UITableView-显示进度条&quot;&gt;&lt;a href=&quot;#UITableView-显示进度条&quot; class=&quot;headerlink&quot; title=&quot;UITableView 显示进度条&quot;&gt;&lt;/a&gt;UITableView 显示进度条&lt;/h3&gt;&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://iaiai.iteye.com/blog/2176287&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;UIWebView 进度条控件 NJKWebViewProgress的使用和分析&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;每日一Linux命令&quot;&gt;&lt;a href=&quot;#每日一Linux命令&quot; class=&quot;headerlink&quot; title=&quot;每日一Linux命令&quot;&gt;&lt;/a&gt;每日一Linux命令&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;scp&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;每日一Github&quot;&gt;&lt;a href=&quot;#每日一Github&quot; class=&quot;headerlink&quot; title=&quot;每日一Github&quot;&gt;&lt;/a&gt;每日一Github&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://github.com/samsoffes/sskeychain&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;sskeychain&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;UITableView-显示进度条&quot;&gt;&lt;a href=&quot;#UITableView-显示进度条&quot; class=&quot;headerlink&quot; title=&quot;UITableView 显示进度条&quot;&gt;&lt;/a&gt;UITableView 显示进度条&lt;/h3&gt;&lt;h3 id=&quot;参考&quot;&gt;&lt;
    
    </summary>
    
    
      <category term="uitableView" scheme="http://yoursite.com/tags/uitableView/"/>
    
  </entry>
  
  <entry>
    <title>registerNib 和 registerClass 在UITableView中的复用</title>
    <link href="http://yoursite.com/2016/07/14/registerNib-registerClass-InUITableView/"/>
    <id>http://yoursite.com/2016/07/14/registerNib-registerClass-InUITableView/</id>
    <published>2016-07-14T02:01:06.000Z</published>
    <updated>2016-07-16T16:29:04.000Z</updated>
    
    <content type="html">&lt;p&gt;ios中用得最多的就是UITableView，现在写界面基本上都会遇到，而自定义UITableViewCell更是家常便饭，那我们怎么去复用和使用自定义UITableViewCell呢，storyboard就不说了。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;ul&gt;
&lt;li&gt;registerNib&lt;/li&gt;
&lt;li&gt;registerClass&lt;/li&gt;
&lt;li&gt;不注册，直接加载Nib，去数组的第1哥元素&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;registerNib&quot;&gt;&lt;a href=&quot;#registerNib&quot; class=&quot;headerlink&quot; title=&quot;registerNib&quot;&gt;&lt;/a&gt;registerNib&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[_tableView registerNib:[UINib nibWithNibName:@&amp;quot;xxxxxCell&amp;quot; bundle:nil] forCellReuseIdentifier:kCellIdentify];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;registerClass&quot;&gt;&lt;a href=&quot;#registerClass&quot; class=&quot;headerlink&quot; title=&quot;registerClass&quot;&gt;&lt;/a&gt;registerClass&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[_tableView registerClass:[xxxxxCell class] forCellReuseIdentifier:kCellIdentify];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;直接加载&quot;&gt;&lt;a href=&quot;#直接加载&quot; class=&quot;headerlink&quot; title=&quot;直接加载&quot;&gt;&lt;/a&gt;直接加载&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;NAAyyay * array = [[NSBundle mainBundle] loadNibNamed:@&amp;quot;MyXibFileName&amp;quot; owner:self];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;UITableViewCell *cell = array[0];&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/7354377/how-to-load-nib-into-view&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;how-to-load-nib-into-view&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/youngsblog/article/details/44536143&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;自定义UITableViewCell（registerNib: 与 registerClass: 的区别）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://itfish.net/article/24224.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;自定义UITableViewCell（registerNib: 与 registerClass: 的区别&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;ios中用得最多的就是UITableView，现在写界面基本上都会遇到，而自定义UITableViewCell更是家常便饭，那我们怎么去复用和使用自定义UITableViewCell呢，storyboard就不说了。&lt;/p&gt;
    
    </summary>
    
    
      <category term="ios" scheme="http://yoursite.com/tags/ios/"/>
    
  </entry>
  
  <entry>
    <title>cocoapods简单集成项目</title>
    <link href="http://yoursite.com/2016/07/13/cocoapods-setup/"/>
    <id>http://yoursite.com/2016/07/13/cocoapods-setup/</id>
    <published>2016-07-12T22:28:16.000Z</published>
    <updated>2016-07-18T08:39:40.000Z</updated>
    
    <content type="html">&lt;p&gt;cocoapods现在是ios工程的标配了，不会cocoapods都不好意思说自己是ios开发了，其实现在包管理的概念很普遍，比如像node有npm，ruby 有gem， swift 也有自己的package管理工具，对ios工程来说，cocoapods就是管理第三方库的工具。&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
&lt;h3 id=&quot;cocoapods-install&quot;&gt;&lt;a href=&quot;#cocoapods-install&quot; class=&quot;headerlink&quot; title=&quot;cocoapods install&quot;&gt;&lt;/a&gt;cocoapods install&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gem install cocoapods&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;pod setup&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;如果不能访问gem源的话建议使用淘宝的源&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gem sources --remove https://rubygems.org/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gem sources -a https://ruby.taobao.org/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;gem sources -l&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;cocoapods基本使用&quot;&gt;&lt;a href=&quot;#cocoapods基本使用&quot; class=&quot;headerlink&quot; title=&quot;cocoapods基本使用&quot;&gt;&lt;/a&gt;cocoapods基本使用&lt;/h3&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;touch Podfile&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://guides.cocoapods.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Cocoapods Guides&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.devtang.com/2014/05/25/use-cocoapod-to-manage-ios-lib-dependency/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;用CocoaPods做iOS程序的依赖管理&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://code4app.com/article/cocoapods-install-usage&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;cocoapods-install-usage&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;cocoapods现在是ios工程的标配了，不会cocoapods都不好意思说自己是ios开发了，其实现在包管理的概念很普遍，比如像node有npm，ruby 有gem， swift 也有自己的package管理工具，对ios工程来说，cocoapods就是管理第三方库的工具。&lt;/p&gt;
    
    </summary>
    
    
      <category term="cocoapods" scheme="http://yoursite.com/tags/cocoapods/"/>
    
  </entry>
  
  <entry>
    <title>简单谈谈webpack</title>
    <link href="http://yoursite.com/2016/07/12/just-talk-webpack/"/>
    <id>http://yoursite.com/2016/07/12/just-talk-webpack/</id>
    <published>2016-07-12T06:15:18.000Z</published>
    <updated>2016-07-16T16:30:54.000Z</updated>
    
    <content type="html">&lt;p&gt;webpack&lt;/p&gt;
&lt;a id=&quot;more&quot;&gt;&lt;/a&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;webpack&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>使用Nginx代理网络请求</title>
    <link href="http://yoursite.com/2016/07/11/nginx-proxy-netwotk/"/>
    <id>http://yoursite.com/2016/07/11/nginx-proxy-netwotk/</id>
    <published>2016-07-11T06:03:55.000Z</published>
    <updated>2016-07-17T14:29:15.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;Nginx-做http代理&quot;&gt;&lt;a href=&quot;#Nginx-做http代理&quot; class=&quot;headerlink&quot; title=&quot;Nginx 做http代理&quot;&gt;&lt;/a&gt;Nginx 做http代理&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;编辑/etc/nginx/nginx.conf&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;server&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       listen          80;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       server_name     bhond.com; //本地访问域名&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       location / &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               proxy_pass              http://www.t66y.com; //你懂的&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               proxy_redirect          off;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               proxy_set_header        X-Real-IP       $remote_addr;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;               &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;nginx的一些基本命令&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginx -t // 测试配置文件是否有语法错误&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;nginx -s reload //重新加载nginx 配置文件&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;h3 id=&quot;参考&quot;&gt;&lt;a href=&quot;#参考&quot; class=&quot;headerlink&quot; title=&quot;参考&quot;&gt;&lt;/a&gt;参考&lt;/h3&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.jianshu.com/p/d5114a2a2052&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Centos下 Nginx安装与配置&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.zjian.me/centos/nginx反向代理google/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;nginx反向代理google&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://liam0205.me/2015/09/07/reverse-proxy-to-get-access-to-gist/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用 Nginx 搭建反向代理以访问 Gist&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Nginx-做http代理&quot;&gt;&lt;a href=&quot;#Nginx-做http代理&quot; class=&quot;headerlink&quot; title=&quot;Nginx 做http代理&quot;&gt;&lt;/a&gt;Nginx 做http代理&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;编辑/etc/nginx/nginx
    
    </summary>
    
    
      <category term="nginx" scheme="http://yoursite.com/tags/nginx/"/>
    
  </entry>
  
</feed>
